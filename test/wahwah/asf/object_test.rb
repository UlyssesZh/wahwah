# frozen_string_literal: true

require 'test_helper'

class WahWah::Asf::ObjectTest < Minitest::Test
  def test_parse
    content = StringIO.new("\xA1\xDC\xAB\x8CG\xA9\xCF\x11\x8E\xE4\x00\xC0\f Seh\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x9AA\x04\x00\x00\x00\x00\x00\x00\x80>\xD5\xDE\xB1\x9D\x01W\x00\x00\x00\x00\x00\x00\x00\xD0\xC2\xA2\x06\x00\x00\x00\x00\x10\xBD\xC9\x04\x00\x00\x00\x00\x1C\f\x00\x00\x00\x00\x00\x00\x02\x00\x00\x00\x80\f\x00\x00\x80\f\x00\x00\x9F\xED\x02\x00".b)
    object = WahWah::Asf::Object.new(content)

    assert_equal 80, object.size
    assert_equal '8CABDCA1-A947-11CF-8EE4-00C00C205365', object.guid
    assert_equal "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x9AA\x04\x00\x00\x00\x00\x00\x00\x80>\xD5\xDE\xB1\x9D\x01W\x00\x00\x00\x00\x00\x00\x00\xD0\xC2\xA2\x06\x00\x00\x00\x00\x10\xBD\xC9\x04\x00\x00\x00\x00\x1C\f\x00\x00\x00\x00\x00\x00\x02\x00\x00\x00\x80\f\x00\x00\x80\f\x00\x00\x9F\xED\x02\x00".b, object.data
  end

  def test_invalid_object
    content = StringIO.new("invalid\xA1\xDC\xAB\x8CG".b)
    object = WahWah::Asf::Object.new(content)

    assert !object.valid?
  end
end
